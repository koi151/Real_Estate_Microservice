services:
  mysql:
    container_name: mysqljava
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: real_estate
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_USER_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - microservices-net
    restart: unless-stopped

  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - MONGO_URI=${MONGO_URL}
    networks:
      - microservices-net

  redis:
    container_name: ms-redis
    image: redis:latest
    ports:
      - "6380:6379"
    restart: unless-stopped
    networks:
      - microservices-net

  redis-insight:
    container_name: redis-insight
    image: redis/redisinsight:latest
    restart: always
    ports:
      - "5540:5540"
    networks:
      - microservices-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net

  keycloak:
    container_name: keycloak-ms
    image: quay.io/keycloak/keycloak:25.0.4
    ports:
      - 9098:8080
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: mysql
      KC_DB_URL_HOST: mysqljava
      KC_DB_URL_DATABASE: auth
      KC_DB_USERNAME: ${MYSQL_USER}
      KC_DB_PASSWORD: ${MYSQL_USER_PASSWORD}
#      KC_LOG_LEVEL: DEBUG
    networks:
      - microservices-net
    command:
      - "start-dev"
    depends_on:
      - mysql

#  ## Prometheus
#  prometheus:
#    image: prom/prometheus:v2.37.1
#    container_name: prometheus
#    restart: always
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    depends_on:


  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net
    restart: unless-stopped

  mail-dev:
    container_name: ms-mail-dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025
    networks:
      - microservices-net

  config-server:
    container_name: config-server
    image: b2113335/config-server:latest
    pull_policy: always
    ports:
      - "8888:8888"
    networks:
      - microservices-net
    env_file:
      - .env
      - local.env

  ## Eureka Server
  discovery-server:
    image: b2113335/discovery:latest
    container_name: discovery-server
    pull_policy: always
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - config-server
      - zipkin
    networks:
      - microservices-net
    env_file:
      - .env
      - local.env

  gateway:
    image: b2113335/gateway:latest
    container_name: gateway
    pull_policy: always
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - zipkin
      - config-server
      - discovery-server
      - keycloak
    networks:
      - microservices-net
    env_file:
      - .env
      - local.env

  property-service:
    container_name: property-service
    image: b2113335/property-service:latest
    ports:
      - "8050:8050"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - config-server
      - mysql
      - discovery-server
      - gateway
      - zipkin
      - keycloak
    networks:
      - microservices-net
    env_file:
      - .env
      - local.env

  account-service:
    container_name: account-service
    image: b2113335/account-service:latest
    ports:
      - "8060:8060"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - config-server
      - mysql
      - discovery-server
      - gateway
      - zipkin
      - keycloak
    networks:
      - microservices-net
    env_file:
      - .env
      - local.env

  listing-service-service:
    container_name: listing-service-service
    image: b2113335/listing-service-service:latest
    ports:
      - "8090:8090"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - config-server
      - mysql
      - discovery-server
      - gateway
      - zipkin
      - keycloak
    networks:
      - microservices-net
    env_file:
      - .env
      - local.env

  property-submission-service:
    container_name: property-submission-service
    image: b2113335/property-submission-service:latest
    ports:
      - "8070:8070"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - config-server
      - broker
      - mysql
      - discovery-server
      - gateway
      - zipkin
      - keycloak
    networks:
      - microservices-net
    env_file:
      - .env
      - local.env

  notification-service:
    container_name: notification-service
    image: b2113335/notification-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - config-server
      - broker
      - discovery-server
      - gateway
      - zipkin
    networks:
      - microservices-net
    env_file:
      - .env
      - local.env

networks:
  microservices-net:
    driver: bridge

volumes:
  mysql_data: